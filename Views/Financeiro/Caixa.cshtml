@model FinanceiroModel

<h3>Caixa</h3>
<br />
<form asp-controller="Financeiro" asp-action="Caixa" method="post">
    <input type="hidden" asp-for="IdMbSale" />
    <input type="hidden" asp-for="TotalValue" id="totalValue" />

    <div class="form-group">
        <label>Medico</label>
        <select asp-for="IdDoctor" class="form-control" asp-items="ViewBag.ListaMedicos" id="txtMedico">
            <option value="">Selecione o medico</option>
        </select>
        <span asp-validation-for="IdDoctor" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label>Paciente</label>
        <select asp-for="IdPatients" class="form-control" asp-items="ViewBag.ListaPacientes" id="txtPaciente">
            <option value="">Selecione o paciente</option>
        </select>
        <span asp-validation-for="IdPatients" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label>Consulta medica</label>
        <select asp-for="IdMedicalConsultation" class="form-control" asp-items="ViewBag.ListaConsulta" id="consultaPreco" onchange="AtualizarPreco()">
            <option value="">Selecione a consulta medica</option>
        </select>
    </div>
    <br />
    <div class="form-group">
        <label>Quantidade</label>
        <br />
        <input asp-for="Qty" type="text" class="form-control" value="1" id="txtQuantidade" />
    </div>
    <br />
    <div class="form-preco">
        <label>Preço Unitário R$:</label>
        <br />
        <input asp-for="ValueConsultation" type="text" class="form-cbxpreco" id="precoUnitario" readonly />
        <button type="button" class="btn btn-primary btn-block" onclick="AdicionarVenda()">Adicionar</button>
    </div>
    <br />
    <div class="table-container">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <td>Medico</td>
                    <td>Paciente</td>
                    <td>Consulta realizada</td>
                    <td>Quantidade</td>
                    <td>Preco Unitário</td>
                    <td>Total</td>
                </tr>
            </thead>
            <tbody id="tabelaVendas">
                <!-- Linhas serão adicionadas dinamicamente aqui -->
            </tbody>
        </table>
    </div>
    <br />
    <div style="float:left; font-size:22px;">Total: R$</div>
    <div style="float:left; font-size:22px; margin-left:5px" id="divTotal">0,00</div>
    <br />
    <br />
    <div class="form-group">
        <label>Pagamento</label>
        <select asp-for="IdPayment" class="form-control" asp-items="ViewBag.ListaPagamento">
            <option value="">Selecione o tipo de pagamento</option>
        </select>
        <span asp-validation-for="IdPayment" class="text-danger"></span>
    </div>
    <br />
    <button type="submit" class="btn-block btn btn-success">Registrar</button>
</form>

<style>
    .form-preco {
        display: flex;
        align-items: center;
    }

    #precoUnitario {
        width: 150px; /* ajusta o tamanho do campo de texto */
        margin-right: 15px; /* espaçamento entre o campo de texto e o botão */
    }

    .btn {
        height: 100%; /* ajusta a altura do botão */
    }

    .form-cbxpreco {
        margin-left : 17px;
    }

    .titulo-cadastro {
        white-space: nowrap; /* Impede a quebra de linha */
        text-align: center; /* Centraliza o texto */
        margin-bottom: 20px; /* Adiciona um espaço abaixo do título */
    }

    .table-container {
        white-space: nowrap;
        width: 100%;
        overflow-x: auto;
        margin: 0; /* Remove margens */
        padding: 0; /* Remove padding */
    }

    .table {
        white-space: nowrap;
        width: 100%;
        border-collapse: collapse;
        margin: 0; /* Remove margens */
        padding: 0; /* Remove padding */
    }

        .table th, .table td {
            white-space: nowrap;
            padding: 8px;
            text-align: center;
            border: 1px solid #ddd;
        }

        .table th {
            background-color: #f2f2f2;
        }
</style>

<script>

    function AtualizarPreco() {
        var consultaPreco = document.getElementById("consultaPreco").value;
        if (consultaPreco) {
            fetch(`/Financeiro/GetConsultaPreco?idConsulta=${consultaPreco}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById("precoUnitario").value = data;
                });
        }
    }


    function AdicionarVenda() {

        var precoUnitarioStr = document.getElementById("precoUnitario").value;
        var precoUnitario = parseFloat(precoUnitarioStr.replace(',', '.'));

        // Verificação se o preço unitário foi selecionado
        if (isNaN(precoUnitario) || precoUnitario <= 0) {
            console.log("Erro: Preço unitário inválido ou não selecionado");
            alert("Selecione uma consulta válida com preço.");
            return;
        }

        var quantidade = parseInt(document.getElementById("txtQuantidade").value);

        // Verificação se a quantidade é válida
        if (isNaN(quantidade) || quantidade <= 0) {
            console.log("Erro: Quantidade inválida");
            alert("Digite uma quantidade válida.");
            return;
        }

        // Verificando se o campo de médico foi selecionado corretamente
        var medicoSelect = document.getElementById("txtMedico");
        if (!medicoSelect || medicoSelect.value === "") {
            console.log("Erro: Médico não selecionado");
            alert("Selecione um médico.");
            return;
        }
        var medico = medicoSelect.options[medicoSelect.selectedIndex].text;

        // Verificando se o campo de paciente foi selecionado corretamente
        var pacienteSelect = document.getElementById("txtPaciente");
        if (!pacienteSelect || pacienteSelect.value === "") {
            console.log("Erro: Paciente não selecionado");
            alert("Selecione um paciente.");
            return;
        }

        var paciente = pacienteSelect.options[pacienteSelect.selectedIndex].text;

        // Verificando se o campo de consulta foi selecionado corretamente
        var consultaSelect = document.getElementById("consultaPreco");
        if (!consultaSelect || consultaSelect.value === "") {
            console.log("Erro: Consulta não selecionada");
            alert("Selecione uma consulta.");
            return;
        }
        var consulta = consultaSelect.options[consultaSelect.selectedIndex].text;

        // Calculando o novo total
        var totalDiv = document.getElementById("divTotal");
        var totalAtual = parseFloat(totalDiv.innerText.replace(',', '.'));

        // Verificação se o total atual é válido
        if (isNaN(totalAtual)) {
            console.log("Erro: Total atual inválido");
            totalAtual = 0; // Define o total como 0 caso não esteja válido
        }

        var novoTotal = totalAtual + (precoUnitario * quantidade);

        // Atualizando o total geral
        totalDiv.innerText = novoTotal.toFixed(2).replace('.', ',');
        document.getElementById("totalValue").value = novoTotal.toFixed(2).replace('.', ',');

        // Adicionando a nova linha à tabela
        var tabelaVendas = document.getElementById("tabelaVendas");
        var novaLinha = tabelaVendas.insertRow();
        novaLinha.innerHTML = "<tr>" +
            "<td>" + medico + "</td>" +        // Nome do médico
            "<td>" + paciente + "</td>" +      // Nome do paciente
            "<td>" + consulta + "</td>" +      // Nome da consulta
            "<td>" + quantidade + "</td>" +
            "<td> R$" + precoUnitario.toFixed(2).replace('.', ',') + "</td>" +
            "<td> R$" + (precoUnitario * quantidade).toFixed(2).replace('.', ',') + "</td>" +
            "</tr>";

        console.log("Venda adicionada: Médico:", medico, "Paciente:", paciente, "Consulta:", consulta, "Quantidade:", quantidade, "Preço Unitário:", precoUnitario, "Total Atual:", novoTotal);
    }
</script>