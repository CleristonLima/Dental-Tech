@model ReceituarioModel

<h3 class="titulo-cadastro">Receita Médica</h3>

<form id="receitaForm" asp-controller="Prontuario" asp-action="ReceitaMedica" method="post">
    <input type="hidden" asp-for="IdMedicinePrescription" />
    <input type="hidden" asp-for="Reason" id="Reason" />

    <div class="form-group">
        <label>Dr(a)</label>
        <select asp-for="IdDoctor" class="form-control" asp-items="ViewBag.ListaMedicos" required="required">
            <option value="">Selecione o medico</option>
        </select>
        <span asp-validation-for="IdDoctor" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label>Paciente</label>
        <select asp-for="IdPatients" class="form-control" asp-items="ViewBag.ListaPacientes" required="required">
            <option value="">Selecione o paciente</option>
        </select>
        <span asp-validation-for="IdPatients" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <br />
        <label>Data de Emissão:</label>
        <input type="date" name="DateIssuePrescriptions" id="dataEmissao" required="required"
               min="@DateTime.Now.ToString("yyyy-MM-dd")"
        @*value="@Model.dateIssue.ToString("yyyy-MM-dd")"*@ />
        <span asp-validation-for="DateIssuePrescriptions" class="text-danger"></span>
    </div>
    <br />

    <!-- Dropdown de medicamentos -->
    <div class="form-group medicamento-row">
        <label for="IdProductRevenue">Medicamento:</label>
        <select id="IdProductRevenue" asp-for="IdProductRevenue" class="form-control combo-medicamento">
            <option value="">Selecione um Medicamento</option>
            @foreach (var remedio in ViewBag.ProdutosReceita)
            {
                <option value="@remedio.Value">@remedio.Text</option>
            }
        </select>
        <span asp-validation-for="IdProductRevenue" class="text-danger"></span>
        <button type="button" class="btn btn-primary btn-lista-remedios" onclick="ListaRemedios()">Lista de remédios</button>
    </div>
    <br />
    <div class="col-2">
        <label>Quantidade:</label>
        <input type="text" id="quantidadeMedicamento" class="form-control short-time-input" />
        <span asp-validation-for="Qty" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label>Unidade Medida</label>

        <select asp-for="TypeMedication" class="form-control" id="tipoMedicacao">
            <option value="CP">Comprimido(s)</option>
            <option value="CX">Caixa(s)</option>
            <option value="Ml">Ml</option>
            <option value="GT">Gotas</option>
        </select>
        <span asp-validation-for="TypeMedication" class="text-danger"></span>
    </div>
    <br />
    <div class="col-2">
        <label>Intervalo (em horas):</label>
        <input type="number" id="intervaloMedicamento" class="form-control short-time-input" />
    </div>
    <br />
    <div class="col-2">
        <label>Intervalo (vez por dia)</label>
        <input type="number" id="intervaloVezesDias" class="form-control short-time-input" />
    </div>
    <br />
    <div class="col-2">
        <label>Duração (Dia(s))</label>
        <input type="number" id="dias" class="form-control short-time-input" />
    </div>
    <br />
    <div class="form-group">
        <button type="button" class="btn btn-primary" onclick="adicionarMedicamento()">Adicionar Medicamento</button>
    </div>
    <br />
    <div id="listaMedicamentos" class="form-group">
        <!-- Aqui serão exibidos os medicamentos adicionados -->
        <span asp-validation-for="Reason"></span>
    </div>
    
    <br />
    <button type="submit" class="btn btn-success" onclick="Imprimir()">Imprimir Receita</button>
</form>

<style>
    .titulo-cadastro {
        white-space: nowrap; /* Impede a quebra de linha */
        text-align: center; /* Centraliza o texto */
        margin-bottom: 20px; /* Adiciona um espaço abaixo do título */
    }
    .medicamento-row {
    display: flex;
    align-items: center; /* Centraliza verticalmente */
    gap: 20px; /* Espaço entre os elementos */
    }

    .combo-medicamento {
    flex: 1; /* Ocupar o máximo de espaço possível */
    max-width: 500px; /* Limita a largura máxima */
    }

</style>

<script>

    function ListaRemedios() {
        if (!navigator.onLine) {
            alert("Sem conexão com a internet. Verifique sua rede e tente novamente.");
        } else {
            window.location.href = "../ProdutosEstoque/ListaRemediosPacientes";
        }
    }

    let medicamentos = [];

    // Função para adicionar medicamento
    function adicionarMedicamento() {
        var medicamentoSelect = document.getElementById("IdProductRevenue");
        var medicamentoNome = medicamentoSelect.options[medicamentoSelect.selectedIndex].text;
        var medicamentoId = medicamentoSelect.value;
        var quantidade = document.getElementById("quantidadeMedicamento").value;
        var tipoMedicacao = document.getElementById("tipoMedicacao").value;  // Tipo de medicacao (CP, GT, etc.)
        var intervaloHoras = document.getElementById("intervaloMedicamento").value; // Intervalo em horas
        var intervaloDeVezes = document.getElementById("intervaloVezesDias").value; // Vezes por dia
        var dias = document.getElementById("dias").value; // Duração em dias

        // Validação básica
        if (!medicamentoId || !quantidade || (!intervaloHoras && !intervaloDeVezes)) {
            alert("Por favor, preencha todos os campos.");
            return;
        }

        // Definir a descrição com base no tipo de medicação
        var descricaoUso = "";
        switch (tipoMedicacao) {
            case "CP": // Comprimidos
                if (intervaloDeVezes) {
                    descricaoUso = `Tomar ${quantidade} comprimido(s) de ${medicamentoNome}, ${intervaloDeVezes} vez(es) por dia durante ${dias} dia(s).`;
                } else if (intervaloHoras) {
                    descricaoUso = `Tomar ${quantidade} comprimido(s) de ${medicamentoNome} de ${intervaloHoras} em ${intervaloHoras} horas durante ${dias} dia(s).`;
                }
                break;
            case "GT": // Gotas
                if (intervaloDeVezes) {
                    descricaoUso = `Tomar ${quantidade} gotas de ${medicamentoNome}, ${intervaloDeVezes} vez(es) por dia durante ${dias} dia(s).`;
                } else if (intervaloHoras) {
                    descricaoUso = `Tomar ${quantidade} gotas de ${medicamentoNome} de ${intervaloHoras} em ${intervaloHoras} horas durante ${dias} dia(s).`;
                }
                break;
            case "Ml": // Mililitros
                if (intervaloDeVezes) {
                    descricaoUso = `Tomar ${quantidade} ml de ${medicamentoNome}, ${intervaloDeVezes} vez(es) por dia durante ${dias} dia(s).`;
                } else if (intervaloHoras) {
                    descricaoUso = `Tomar ${quantidade} ml de ${medicamentoNome} de ${intervaloHoras} em ${intervaloHoras} horas durante ${dias} dia(s).`;
                }
                break;
            case "CX": // Caixa
                if (intervaloDeVezes) {
                    descricaoUso = `Tomar ${quantidade} caixa(s) de ${medicamentoNome}, ${intervaloDeVezes} vez(es) por dia durante ${dias} dia(s).`;
                } else if (intervaloHoras) {
                    descricaoUso = `Tomar ${quantidade} caixa(s) de ${medicamentoNome} de ${intervaloHoras} em ${intervaloHoras} horas durante ${dias} dia(s).`;
                }
                break;
            default: // Outros tipos de medicação
                if (intervaloDeVezes) {
                    descricaoUso = `${quantidade} unidade(s) de ${medicamentoNome}, ${intervaloDeVezes} vez(es) por dia durante ${dias} dia(s).`;
                } else if (intervalo) {
                    descricaoUso = `${quantidade} unidade(s) de ${medicamentoNome} a cada ${intervaloHoras} horas durante ${dias} dia(s).`;
                }
                break;
        }

        // Adicionar os dados ao array
        medicamentos.push({
            IdProductRevenue: medicamentoId,
            Qty: quantidade,
            TypeMedication: tipoMedicacao,
            Reason: descricaoUso
        });

        // Exibir o medicamento na página
        var lista = document.getElementById("listaMedicamentos");
        var medicamentoHTML = `<p>${descricaoUso}</p>`;
        lista.innerHTML += medicamentoHTML;

        document.getElementById("Reason").value = medicamentos.map(m => m.Reason).join("\n");

        // Limpar os campos
        medicamentoSelect.selectedIndex = 0;
        document.getElementById("quantidadeMedicamento").value = '';
        document.getElementById("intervaloMedicamento").value = '';
        document.getElementById("intervaloVezesDias").value = '';
        document.getElementById("dias").value = '';
    }

    document.getElementById("receitaForm").onsubmit = function () {
        // Criar um campo oculto para enviar os medicamentos como JSON
        var inputMedicamentos = document.createElement("input");
        inputMedicamentos.type = "hidden";
        inputMedicamentos.name = "Medicamentos";
        inputMedicamentos.value = JSON.stringify(medicamentos);

        this.appendChild(inputMedicamentos);
    };

</script>
